{"ast":null,"code":"var _jsxFileName = \"/Users/shivani/Documents/SUNSHINE/NewMerge/pages/songs/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { PrismaClient } from '@prisma/client';\nconst prisma = new PrismaClient();\nexport async function getStaticProps({\n  params\n}) {\n  const song = await prisma.song.findOne({\n    include: {\n      artist: true\n    },\n    where: {\n      id: Number(params.id)\n    }\n  });\n  return {\n    props: {\n      song\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const songs = await prisma.song.findMany();\n  return {\n    paths: songs.map(song => ({\n      params: {\n        id: song.id.toString()\n      }\n    })),\n    fallback: false\n  };\n}\nexport default (({\n  song\n}) => __jsx(\"iframe\", {\n  width: \"100%\",\n  height: \"315\",\n  src: `https://www.youtube.com/embed/${song.youtubeId}`,\n  frameBorder: \"0\",\n  allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n  allowFullScreen: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }\n}));","map":{"version":3,"sources":["/Users/shivani/Documents/SUNSHINE/NewMerge/pages/songs/[id].js"],"names":["PrismaClient","prisma","getStaticProps","params","song","findOne","include","artist","where","id","Number","props","getStaticPaths","songs","findMany","paths","map","toString","fallback","youtubeId"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,MAAMC,MAAM,GAAG,IAAID,YAAJ,EAAf;AACA,OAAO,eAAeE,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC/C,QAAMC,IAAI,GAAG,MAAMH,MAAM,CAACG,IAAP,CAAYC,OAAZ,CAAoB;AACrCC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAD4B;AAErCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,EAAE,EAAEC,MAAM,CAACP,MAAM,CAACM,EAAR;AADL;AAF8B,GAApB,CAAnB;AAMA,SAAO;AACLE,IAAAA,KAAK,EAAE;AACLP,MAAAA;AADK;AADF,GAAP;AAKD;AAED,OAAO,eAAeQ,cAAf,GAAgC;AACrC,QAAMC,KAAK,GAAG,MAAMZ,MAAM,CAACG,IAAP,CAAYU,QAAZ,EAApB;AACA,SAAO;AACLC,IAAAA,KAAK,EAAEF,KAAK,CAACG,GAAN,CAAWZ,IAAD,KAAW;AAC1BD,MAAAA,MAAM,EAAE;AACNM,QAAAA,EAAE,EAAEL,IAAI,CAACK,EAAL,CAAQQ,QAAR;AADE;AADkB,KAAX,CAAV,CADF;AAMLC,IAAAA,QAAQ,EAAE;AANL,GAAP;AAQD;AAED,gBAAe,CAAC;AAAEd,EAAAA;AAAF,CAAD,KACb;AACE,EAAA,KAAK,EAAC,MADR;AAEE,EAAA,MAAM,EAAC,KAFT;AAGE,EAAA,GAAG,EAAG,iCAAgCA,IAAI,CAACe,SAAU,EAHvD;AAIE,EAAA,WAAW,EAAC,GAJd;AAKE,EAAA,KAAK,EAAC,yEALR;AAME,EAAA,eAAe,MANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF","sourcesContent":["import { PrismaClient } from '@prisma/client';\nconst prisma = new PrismaClient();\nexport async function getStaticProps({ params }) {\n  const song = await prisma.song.findOne({\n    include: { artist: true },\n    where: {\n      id: Number(params.id)\n    }\n  });\n  return {\n    props: {\n      song\n    }\n  };\n}\n\nexport async function getStaticPaths() {\n  const songs = await prisma.song.findMany();\n  return {\n    paths: songs.map((song) => ({\n      params: {\n        id: song.id.toString()\n      }\n    })),\n    fallback: false\n  };\n}\n\nexport default ({ song }) => (\n  <iframe\n    width=\"100%\"\n    height=\"315\"\n    src={`https://www.youtube.com/embed/${song.youtubeId}`}\n    frameBorder=\"0\"\n    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n    allowFullScreen\n  />\n);\n"]},"metadata":{},"sourceType":"module"}